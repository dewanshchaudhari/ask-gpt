model User {
    id        Int       @id @default(autoincrement())
    phone     String    @unique
    name      String?
    username  String    @unique
    dob       String
    wallet    Int       @default(0)
    pro       Boolean   @default(false)
    contests  Contest[]
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

model Stocks {
    ticker      String      @id
    name        String
    logo        String?
    description String?
    prices      Prices[]
    selection   Selection[]
}

model Prices {
    id          Int      @id @default(autoincrement())
    date        String
    open_price  String
    close_price String
    Stocks      Stocks?  @relation(fields: [ticker], references: [ticker])
    ticker      String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

//daily contest
model Contests {
    id        Int       @id @default(autoincrement())
    name      String
    date      String
    start     DateTime
    prize     Int
    users     Int
    teams     Int
    contests  Contest[]
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

model Teams {
    id       Int       @id @default(autoincrement())
    contests Contest[]
}

model Selection {
    id     Int     @id @default(autoincrement())
    entry  String
    Stocks Stocks? @relation(fields: [ticker], references: [ticker])
    ticker String?
    moment Int
    trade  Trade
    qty    Int
}

enum Trade {
    BUY
    SELL
}

model Contest {
    id         Int       @id @default(autoincrement())
    Contests   Contests? @relation(fields: [contestsId], references: [id])
    contestsId Int?
    User       User?     @relation(fields: [userId], references: [id])
    userId     Int?
    Teams      Teams?    @relation(fields: [teamsId], references: [id])
    teamsId    Int?
}
